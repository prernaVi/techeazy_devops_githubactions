name: Deploy TechEazy DevOps Project

on:
  push:
    branches:
      - main
    tags:
      - deploy-dev
      - deploy-prod

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-south-1

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Retrieve EC2 IP
        id: ec2_ip
        run: |
          echo "EC2_IP=$(terraform output -raw instance_public_ip)" >> $GITHUB_ENV

      - name: Wait for EC2 to be ready for SSH
        run: |
          echo "Waiting for SSH to be ready..."
          for i in {1..30}; do
            if nc -zv ${{ env.EC2_IP }} 22; then
              echo "SSH is available."
              exit 0
            fi
            echo "Retry $i: SSH not available yet, waiting 10 seconds..."
            sleep 10
          done
          echo "SSH did not become available in time." >&2
          exit 1

      - name: Copy Spring Boot app to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ env.EC2_IP }}
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: |
            mvnw
            mvnw.cmd
            pom.xml
            src/**
          target: /home/ec2-user/app

      - name: Build and run Spring Boot on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.EC2_IP }}
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/ec2-user/app
            chmod +x mvnw
            ./mvnw clean package
            sudo pkill -f 'java -jar' || true
            nohup java -jar target/*.jar --server.port=80 &
