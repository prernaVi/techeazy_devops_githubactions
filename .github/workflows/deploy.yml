name: Deploy Spring Boot App to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-south-1
      EC2_IP: 13.233.125.122  # replace with your current EC2 public IP if changed

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform init

      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform apply -auto-approve

      - name: Copy Spring Boot app to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ env.EC2_IP }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "."
          target: "/home/ec2-user/app"
          rm: true

      - name: Deploy and Run Spring Boot on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.EC2_IP }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Updating packages and installing Java if not present..."
            if ! java -version &>/dev/null; then
              sudo yum update -y
              sudo yum install -y java-17-amazon-corretto
            fi
            echo "Navigating to app folder..."
            cd /home/ec2-user/app
            echo "Building Spring Boot app with Maven..."
            if [ ! -f mvnw ]; then
              chmod +x mvnw || true
            fi
            ./mvnw clean package -DskipTests
            echo "Stopping any running Spring Boot application..."
            sudo pkill -f 'java -jar' || true
            echo "Starting Spring Boot application..."
            nohup java -jar target/*.jar --server.port=8080 > app.log 2>&1 &
            echo "Deployment completed successfully."
